diff --git a/src/log_ldap.c b/src/log_ldap.c
index e7fc4c8..9274e99 100644
--- a/src/log_ldap.c
+++ b/src/log_ldap.c
@@ -78,6 +78,20 @@ void pw_ldap_parse(const char * const file)
         free(default_gid_s);
         default_gid_s = NULL;
     }
+    if (force_default_uid_s != NULL) {
+        if (strcasecmp(force_default_uid_s, "True") == 0) {
+            force_default_uid = 1;
+        }
+        free(force_default_uid_s);
+        force_default_uid_s = NULL;
+    }
+    if (force_default_gid_s != NULL) {
+        if (strcasecmp(force_default_gid_s, "True") == 0) {
+            force_default_gid = 1;
+        }
+        free(force_default_gid_s);
+        force_default_gid_s = NULL;
+    }
     use_tls = 0;
     if (use_tls_s != NULL) {
         if (strcasecmp(use_tls_s, "True") == 0) {
@@ -390,30 +404,40 @@ static struct passwd *pw_ldap_getpwnam(const char *name,
         logfile(LOG_ERR, MSG_OUT_OF_MEMORY);
         goto error;
     }
-    if ((pw_uid_s = pw_ldap_getvalue(ld, res, LDAP_FTPUID)) == NULL ||
-        *pw_uid_s == 0 || 
-        (pwret.pw_uid = (uid_t) strtoul(pw_uid_s, NULL, 10)) <= (uid_t) 0) {
-        free((void *) pw_uid_s);
-        pw_uid_s = NULL;
-        if ((pw_uid_s = pw_ldap_getvalue(ld, res, LDAP_UIDNUMBER)) == NULL ||
+    /* only force the uid if default_uid has been set */
+    if (!force_default_uid && default_uid > 0) {
+        if ((pw_uid_s = pw_ldap_getvalue(ld, res, LDAP_FTPUID)) == NULL ||
             *pw_uid_s == 0 || 
             (pwret.pw_uid = (uid_t) strtoul(pw_uid_s, NULL, 10)) <= (uid_t) 0) {
-            pwret.pw_uid = default_uid;
-        }                 
-    }     
+            free((void *) pw_uid_s);
+            pw_uid_s = NULL;
+            if ((pw_uid_s = pw_ldap_getvalue(ld, res, LDAP_UIDNUMBER)) == NULL ||
+                *pw_uid_s == 0 || 
+                (pwret.pw_uid = (uid_t) strtoul(pw_uid_s, NULL, 10)) <= (uid_t) 0) {
+                pwret.pw_uid = default_uid;
+            }                 
+        }
+    } else {
+        pwret.pw_uid = default_uid;
+    }
     free((void *) pw_uid_s);
     pw_uid_s = NULL;
-    if ((pw_gid_s = pw_ldap_getvalue(ld, res, LDAP_FTPGID)) == NULL ||
-        *pw_gid_s == 0 ||
-        (pwret.pw_gid = (gid_t) strtoul(pw_gid_s, NULL, 10)) <= (gid_t) 0) {
-        free((void *) pw_gid_s);
-        pw_gid_s = NULL;
-        if ((pw_gid_s = pw_ldap_getvalue(ld, res, LDAP_GIDNUMBER)) == NULL ||
+    /* only force the gid if default_gid has been set */
+    if (!force_default_gid && default_uid > 0) {
+        if ((pw_gid_s = pw_ldap_getvalue(ld, res, LDAP_FTPGID)) == NULL ||
             *pw_gid_s == 0 ||
             (pwret.pw_gid = (gid_t) strtoul(pw_gid_s, NULL, 10)) <= (gid_t) 0) {
-            pwret.pw_gid = default_gid;
-        }                        
-    } 
+            free((void *) pw_gid_s);
+            pw_gid_s = NULL;
+            if ((pw_gid_s = pw_ldap_getvalue(ld, res, LDAP_GIDNUMBER)) == NULL ||
+                *pw_gid_s == 0 ||
+                (pwret.pw_gid = (gid_t) strtoul(pw_gid_s, NULL, 10)) <= (gid_t) 0) {
+                pwret.pw_gid = default_gid;
+            }                        
+        }
+    } else {
+        pwret.pw_gid = default_gid;
+    }
     free((void *) pw_gid_s);
     pw_gid_s = NULL;
     if ((pwret.pw_dir = 
diff --git a/src/log_ldap_p.h b/src/log_ldap_p.h
index cdf6582..8cce17e 100644
--- a/src/log_ldap_p.h
+++ b/src/log_ldap_p.h
@@ -20,9 +20,13 @@ static char *ldap_homedirectory;
 static char *ldap_version_s;
 static int ldap_version;
 static char *default_uid_s;
-static uid_t default_uid;
+static char *force_default_uid_s;
+static int force_default_uid = 0;
+static uid_t default_uid = 0;
 static char *default_gid_s;
-static gid_t default_gid;
+static char *force_default_gid_s;
+static int force_default_gid = 0;
+static gid_t default_gid = 0;
 static char *use_tls_s;
 static int use_tls;
 static char *ldap_auth_method_s;
@@ -38,7 +42,9 @@ static ConfigKeywords ldap_config_keywords[] = {
     { "LDAPHomeDir", &ldap_homedirectory },
     { "LDAPVersion", &ldap_version_s },
     { "LDAPDefaultUID", &default_uid_s },
+    { "LDAPForceDefaultUID", &force_default_uid_s },
     { "LDAPDefaultGID", &default_gid_s },
+    { "LDAPForceDefaultGID", &force_default_gid_s },
     { "LDAPUseTLS", &use_tls_s },
     { "LDAPAuthMethod", &ldap_auth_method_s },
     { NULL, NULL }
